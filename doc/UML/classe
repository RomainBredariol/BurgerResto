https://www.planttext.com/


@startuml

title Diagramme de classe

abstract class Entitee {
  -String nom
  -int pv
  -int pvMax
  -int or
  -boolean estVivant
  +getPV() : int
  +getOr() : int
  +getNom() : String
  +estVivant() : boolean
  +{abstract} attaquer(Entitee entitee)
  +subirDegats(int degats)
  +soigner()
}
class Joueur {
  -Salle emplacement
  -Arme arme
  -Armure armure
  -ArrayList<Objet> sac
  +prendrePorte(Porte porte)
  +getSalle() : Salle
}
class Monstre {
  -Objet tresor
  -int force
  +getTresor() : Objet
}

Entitee <|-down- Joueur : Hérite
Entitee <|-down- Monstre : Hérite

abstract class Objet {
  -String nom
  -int valeur
  +getNom() : String
  +getValeur() : int
}

class Armure {
  -int defense
  -int defenseMax
  -boolean estCassee
  +getDefense() : int
  +getDefenseMax() : int
  +subirDegats(int degats)
  +reparer()
  +estCassee() : boolean
}
class Arme {
  -int degats
  +getDegats() : int
}
Joueur "0,n"--down-"1" Objet : transporte
Monstre "1"--down-"1" Objet : garde
Objet <|-down- Arme : Hérite
Objet <|-down- Armure : Hérite

class Carte {
  -Salle[][] salles
}
class Salle {
  -String description
  -ArrayList<Monstre> : monstres
  -Porte[] : portes
  -estVisible : boolean
  +getDescription() : String
  +getMonstres() : ArrayList<Monstre>
  +getPortes() : Porte[]
  +estVisible() : boolean
  +reveler()
}

class Porte {
  -boolean estOuverte
  -Salle salle1
  -Salle salle2
  +ouvrir()
  +estOuverte() : boolean
}

Salle "0,4" --down- "2" Porte: comporte

Carte "n" *-down- "1,n" Salle: Composition
Salle"0,1"--left-"1" Joueur : contient
Salle"0,n"--right-"1" Monstre : contient

class Boutique {
  -ArrayList<Objet> marchandise
  +acheter(Objet objet)
  +vendre(Objet objet)
  +reparer(Armure armure)
  +getMarchandise() : ArrayList<Objet>
}



@enduml